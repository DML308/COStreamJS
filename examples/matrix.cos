import Matrix;

Matrix array[8] = { 
    [ [0,0], [0,0] ],
    [ [1,1], [1,1] ],
    [ [2,2], [2,2] ],
    [ [3,3], [3,3] ],
    [ [4,4], [4,4] ],
    [ [5,5], [5,5] ],
    [ [6,6], [6,6] ],
    [ [7,7], [7,7] ]
};                

composite B(output stream<Matrix x>Out,input stream<Matrix x>In)
{
    param
        int size1,int size2;
    Out = B(In)
    {
        work
        {
            Out[0].x = In[0].x;
        }
        window{
            In  sliding(1,1);
            Out tumbling(1);
        }
    };
}

composite Main(){
    stream<Matrix x>S,P;
    S=Source(){
        int i;
        init{ }
        work{
            for(i = 0;i < 8;i++){
                S[i].x = array[i];
            }
        }
        window{
            S tumbling(8);
        }
    };
    P = B(S)(88,99);
    Sink(P){
        work{
            println(P[0].x);
        }
        window{
            P tumbling(1);
        }
    };
}
