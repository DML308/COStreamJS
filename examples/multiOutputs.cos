composite Test(input stream<int x>In1, output stream<int x>Out1, stream<int x>Out2) {
	(Out1, Out2)  = test(In1) {
		init { println("test init"); }
		work {
			Out1[0].x = In1[0].x + 1;
			Out2[0].x = In1[0].x + 2;

			print("test work Out1[0].x = ");
			println(Out1[0].x);
		}
		window {
			In1  sliding(1, 1);
			Out1 tumbling(1);
			Out2  tumbling(1);
		}
	};
}
composite Fun(input stream<int x>FunIn, output stream<int x>FunOut) {
	FunOut = fun(FunIn) {
		init { println("fun init"); }
		work {
			FunOut[0].x = FunIn[0].x * 2;
			print("fun work FunOut[0].x = ");
			println(FunOut[0].x);
		}
		window {
			FunIn  sliding(1, 1);
			FunOut tumbling(1);
		}
	};
}
composite Main() {
	stream<int x> Data, Out1, Out2, Out3, Out4;
	Data = start() {
		init { println("start init"); }
		work {
			Data[0].x = 1;
			println("start work Data[0].x = ", Data[0].x);
		}
		window  {
			Data tumbling(1);
		}
	};
	(Out1, Out2) = Test(Data)();
	Out3 = Fun(Out1)();
	Out4 = Fun(Out2)();
	sink(Out3, Out4){
		work {
			println("sink work Out3[0].x = ", Out3[0].x);
			println("sink work Out4[0].x = ", Out4[0].x);
		}
		window {
			Out3 sliding(1, 1);
			Out4 sliding(1, 1);
		}
	};
}