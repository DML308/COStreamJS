import Matrix;
Matrix img = [ [0,0,1], [0,0,1], [0,0,1] ];
Matrix kernel = [ [-1,0], [0,1] ];
composite Main(){
    stream<Matrix x>S;
    S=Source(){
        work{
            int kernel_heigh = kernel.rows();               //获取卷积核(滤波)的高度
            int kernel_width = kernel.cols();               //获取卷积核(滤波)的宽度
            int conv_heigh = img.rows() - kernel.rows() + 1;    //确定卷积结果的大小
            int conv_width = img.cols() - kernel.cols() + 1;

            Matrix conv = Matrix.zeros(conv_heigh,conv_width);

            int i,j;
            for(i=0;i<conv_heigh;i++){                  //逐点相乘并求和得到每一个点
                for(j=0;j<conv_width;j++){
                    conv[i,j] = img[i:i + kernel_heigh,j:j + kernel_width ].cwiseProduct(kernel).sum() ;
                }
            }
            S[0].x = conv;
        }
        window{
            S tumbling(1);
        }
    };
    Sink(S){
        work{}
        window{
            S sliding(1,1);
        }
    };
}